{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { loop, isLoop, getModel, getCmd } from './loop';\nimport batchCmds from './batch-cmds';\nexport default function combineReducers(childMap) {\n  return function () {\n    var rootState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    var cmds = [];\n    var hasChanged = false;\n    var newState = Object.keys(childMap).reduce(function (prev, key) {\n      var childReducer = childMap[key];\n\n      if (!childReducer) {\n        if (!hasChanged) {\n          prev = _objectSpread({}, prev);\n          hasChanged = true;\n        }\n\n        delete prev[key];\n        return prev;\n      }\n\n      var currentChild = childReducer.apply(void 0, [prev[key], action].concat(args));\n\n      if (isLoop(currentChild)) {\n        cmds.push(getCmd(currentChild));\n        currentChild = getModel(currentChild);\n      }\n\n      if (prev[key] !== currentChild && hasChanged) {\n        prev[key] = currentChild;\n      } else if (prev[key] !== currentChild) {\n        prev = _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, key, currentChild));\n        hasChanged = true;\n      }\n\n      return prev;\n    }, rootState);\n    return loop(newState, batchCmds(cmds));\n  };\n}","map":{"version":3,"sources":["/Users/chriseldridge/git/redux-toolkit-playground/node_modules/redux-loop/es/combine-reducers.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","loop","isLoop","getModel","getCmd","batchCmds","combineReducers","childMap","rootState","undefined","action","_len","args","Array","_key","cmds","hasChanged","newState","reduce","prev","childReducer","currentChild","concat"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { loop, isLoop, getModel, getCmd } from './loop';\nimport batchCmds from './batch-cmds';\nexport default function combineReducers(childMap) {\n  return function () {\n    var rootState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    var cmds = [];\n    var hasChanged = false;\n    var newState = Object.keys(childMap).reduce(function (prev, key) {\n      var childReducer = childMap[key];\n\n      if (!childReducer) {\n        if (!hasChanged) {\n          prev = _objectSpread({}, prev);\n          hasChanged = true;\n        }\n\n        delete prev[key];\n        return prev;\n      }\n\n      var currentChild = childReducer.apply(void 0, [prev[key], action].concat(args));\n\n      if (isLoop(currentChild)) {\n        cmds.push(getCmd(currentChild));\n        currentChild = getModel(currentChild);\n      }\n\n      if (prev[key] !== currentChild && hasChanged) {\n        prev[key] = currentChild;\n      } else if (prev[key] !== currentChild) {\n        prev = _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, key, currentChild));\n        hasChanged = true;\n      }\n\n      return prev;\n    }, rootState);\n    return loop(newState, batchCmds(cmds));\n  };\n}"]},"metadata":{},"sourceType":"module"}